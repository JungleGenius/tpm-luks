#!/bin/bash -e
#
# tpm-luks-init: For each entry in the config file, run the script to
#		 generate its PCR values, then run tpm-luks to create a
#		 new TPM NVRAM secret for it
#
#
#set -x
CONF=/etc/tpm-luks.conf
NVPERMSFILE=$(mktemp /tmp/${0##*/}-XXXXXX)
NVINDEX=
LUKS_OPTIONS=

function usage
{
	echo "usage ${0##*/}: [options]"
	echo -e "  -s <slot>          use this LUKS keyslot number (0 to 7)"
	echo -e "  -i <index|device>  initialize only the specified TPM NVRAM index or device"
	echo -e "  -h                 help"
}

while getopts "s:i:h" opt; do
	case $opt in
	s)
		LUKS_OPTIONS="-s ${OPTARG}"
		;;
	i)
		NVINDEX=${OPTARG}
		;;
	*)
		usage
		exit 255
		;;
	esac
done

function cleanup
{
	rm -f ${NVPERMSFILE}
}

cleanup

trap cleanup EXIT

DEVICES=( $(cat ${CONF} | awk -F: '! /^#/ {print $1}') )
INDEXES=( $(cat ${CONF} | awk -F: '! /^#/ {print $2}') )
SCRIPTS=( $(cat ${CONF} | awk -F: '! /^#/ {print $3}') )

NUM_DEVICES=$(( ${#DEVICES[@]} - 1 ))
NUM_INDEXES=$(( ${#INDEXES[@]} - 1 ))
NUM_SCRIPTS=$(( ${#SCRIPTS[@]} - 1 ))
NUM_UNIQUES=$(( $(for t in ${INDEXES[@]}; do echo $t; done | sort -u | wc -l) - 1 ))

if [ $NUM_SCRIPTS -ne $NUM_DEVICES -o $NUM_DEVICES -ne $NUM_INDEXES ]; then
	echo "${CONF} parse error" 1>&2
	exit 1
fi

if [ $NUM_UNIQUES -ne $NUM_DEVICES ]; then
	echo "${CONF} parse error, all NVRAM indexes must be different" 1>&2
	exit 1
fi

for d in $(seq 0 $NUM_DEVICES); do
	if [ -n "$NVINDEX" -a "$NVINDEX" != "${INDEXES[$d]}" -a "$NVINDEX" != "${DEVICES[$d]}" ]; then
		continue
	fi
	
	echo "Generating PCR values for ${DEVICES[$d]}..."
	if [ -x ${SCRIPTS[$d]} ]; then
		${SCRIPTS[$d]} -o ${NVPERMSFILE}
		if [ $? -ne 0 ]; then
			echo "${SCRIPTS[$d]} has failed. Aborting."
			exit 2
		fi
	fi

	echo "Creating new TPM NVRAM secret for ${DEVICES[$d]}..."
	if [ -f ${NVPERMSFILE} ]; then
		tpm-luks -c -d ${DEVICES[$d]} -i ${INDEXES[$d]} $LUKS_OPTIONS -p ${NVPERMSFILE}
	else
		tpm-luks -c -d ${DEVICES[$d]} -i ${INDEXES[$d]} $LUKS_OPTIONS
	fi
	if [ $? -ne 0 ]; then
		echo "tpm-luks has failed. Aborting."
		echo "you can restart for a specific TPM NVRAM index"
		usage
		exit 3
	fi
	[ -f ${NVPERMSFILE} ] && rm -f ${NVPERMSFILE}
done

exit 0
