#!/bin/bash -e
#
# tpm-luks-update: For each entry in the config file, run the script to
#		   regenerate its PCR values, then run tpm-luks to migrate
#		   its secret to a new NVRAM index sealed to the new PCRs
#
CONF=/etc/tpm-luks.conf
NVPERMSFILE=$(mktemp /tmp/${0##*/}-XXXXXX)
NO_SCRIPT=0

function usage
{
        echo "usage ${0##*/}: [options]"
        echo -e "  -n                 no script execution"
        echo -e "  -h                 help"
}

while getopts "nh" opt; do
        case $opt in
        n)
                NO_SCRIPT=1
                ;;
        *)
                usage
                exit 255
                ;;
        esac
done


function cleanup
{
	rm -f ${NVPERMSFILE}
}

cleanup

trap cleanup EXIT

DEVICES=( $(cat ${CONF} | awk -F: '! /^#/ {print $1}') )
INDEXES=( $(cat ${CONF} | awk -F: '! /^#/ {print $2}') )
SCRIPTS=( $(cat ${CONF} | awk -F: '! /^#/ {print $3}') )

NUM_DEVICES=$(( ${#DEVICES[@]} - 1 ))
NUM_INDEXES=$(( ${#INDEXES[@]} - 1 ))
NUM_SCRIPTS=$(( ${#SCRIPTS[@]} - 1 ))
NUM_UNIQUES=$(( $(for t in ${INDEXES[@]}; do echo $t; done | sort -u | wc -l) - 1 ))

if [ $NUM_SCRIPTS -ne $NUM_DEVICES -o $NUM_DEVICES -ne $NUM_INDEXES ]; then
        echo "${CONF} parse error" 1>&2
        exit 1
fi

if [ $NUM_UNIQUES -ne $NUM_DEVICES ]; then
        echo "${CONF} parse error, all NVRAM indexes must be different" 1>&2
        exit 1
fi

for d in $(seq 0 $NUM_DEVICES); do
	if [ -x ${SCRIPTS[$d]} -a ${NO_SCRIPT} -eq 0 ]; then
		echo "Generating PCR values for ${DEVICES[$d]}..."
		${SCRIPTS[$d]} -o ${NVPERMSFILE}
		if [ $? -ne 0 ]; then
			echo "${SCRIPTS[$d]} has failed."
			exit 2
		fi
	fi

	echo "Migrating TPM NVRAM secret for ${DEVICES[$d]}..."
	if [ -f ${NVPERMSFILE} ]; then
		tpm-luks -m -i ${INDEXES[$d]} -d ${DEVICES[$d]} -p ${NVPERMSFILE}
	else
		tpm-luks -m -i ${INDEXES[$d]} -d ${DEVICES[$d]}
	fi
	if [ $? -ne 0 ]; then
		echo "ERROR: update failed. Aborting."
		exit 3
	fi
	[ -f ${NVPERMSFILE} ] && rm -f ${NVPERMSFILE}
done

exit 0
